1.命名规范:
    1.1参考文档(http://www.cnblogs.com/ycxyyzw/p/4103284.html,
                http://keeganlee.me/post/android/20150709)
    1.2英文缩写原则：
        1 较短的单词可通过去掉“元音”形成缩写
        2 较长的单词可取单词的头几个字母形成缩写
        3 此外还有一些约定成俗的英文单词缩写.

    1.3下面为常见的英文单词缩写:

    名称                          缩写

    icon                          ic （主要用在app的图标）

    color                         cl（主要用于颜色值）

    divider                       di（主要用于分隔线，不仅包括Listview中的divider，还包括普通布局中的线）

    selector                      sl（主要用于某一view多种状态，不仅包括Listview中的selector，还包括按钮的selector）

    average                       avg

    background                    Bg（主要用于布局和子布局的背景）

    buffer                        buf

    control                       ctrl

    delete                        del

    document                      doc

    error                         err

    escape                        esc

    increment                     inc

    infomation                    info

    initial                       init

    image                         img

    Internationalization          Int

    length                        len

    library                       lib

    message                       msg

    password                      pwd

    positio                       pos

    server                        srv

    string                        str

    temp                          tmp

    window                        win
    程序中使用单词缩写原则：不要用缩写，除非该缩写是约定俗成的。


    1.4命名规范：
        1.4.1包（packages):
        采用反域名命名规则，全部使用小写字母。一级包名为com，
        二级包名为xx（可以是公司或则个人的随便），
        三级包名根据应用进行命名，四级包名为模块名或层级名(com.channelsoft.ggsj)
                包名                                              此包中包含
        com.xx.应用名称缩写.activities            页面用到的Activity类 (activities层级名用户界面层)

        com.xx.应用名称缩写.base                  页面中每个Activity类共享的可以写成一个BaseActivity类 (基础共享的类)

        com.xx.应用名称缩写.adapter               页面用到的Adapter类 (适配器的类)

        com.xx.应用名称缩写.tools                 此包中包含：公共工具方法类（tools模块名）

        com.xx.应用名称缩写.bean                  此包中包含：元素类

        com.xx.应用名称缩写.db                    数据库操作类

        com.xx.应用名称缩写.view                  自定义的View类等

        com.xx.应用名称缩写.service               Service服务

        com.xx.应用名称缩写.broadcast             Broadcast服务



    1.5类（classes）
    ：名词，采用大驼峰命名法，尽量避免缩写，除非该缩写是众所周知的，
    比如HTML,URL，如果类名称中包含单词缩写，则单词缩写的每个字母均应大写。


            类                   描述                  例如
         activity      以Activity为后缀标识           例如WelcomeActivity

         Adapter       以Adapter为后缀标识            例如OrderDetailAdapter

        公共方法类       Tools或Manager为后缀标识       线程池管理类：ThreadPoolManager,LoginManager日志工具类：LogTools

        数据库类        以DBHelper后缀标识             订单数据库：OrderDBHelper(项目中的数据库操作一般分为3个类,继承SqliteOpenHelper类,数据库操作类OrderDBOperator,数据库声明类OrderDB)

        Service类      以Service为后缀标识             时间服务TimeService

        BroadcastReceive    类以Broadcast为后缀       标识时间通知TimeBroadcast

        ContentProvider     以Provider为后缀标识

        直接写的共享基础类   以Base开头                 BaseActivity,BaseFragment

    PS:所有的类都需要有注释.1.功能描述    2.功能演进带来的代码修改:modifier,add某些方法的原因等.


    1.6接口（interface）：命名规则与类一样采用大驼峰命名法，多为回调的形式出现,例如GetOrderDetailListener.

    1.7方法（methods）：动词或动名词，采用小驼峰命名法例如:onCreate(),run()


                方法                                          说明
                initXX()              初始化相关方法,使用init为前缀标识，如初始化布局initView()

                isXX()                方法返回值为boolean型的请使用is为前缀标识

                getXX()               返回某个值的方法，使用get为前缀标识

                processXX()           对数据进行处理的方法，尽量使用process为前缀标识

                displayXX()           弹出提示框和提示信息，使用display为前缀标识

                saveXX()              与保存数据相关的，使用sav为e前缀标识

                resetXX()             对数据重组的，使用reset前缀标识

                clearXX()             清除数据相关的

                removeXXX()           清除数据相关的

                drawXXX()             绘制数据或效果相关的，使用draw前缀标识

    声明:简单的方法禁止写入注释,比如initView等.

    1.8变量（variables）采用小驼峰命名法。类中控件名称必须与xml布局id保持一致。

    用统一的量词通过在结尾处放置一个量词，就可创建更加统一的变量，它们更容易理解，也更容易搜索。
    例如，请使用strCustomerFirst和strCustomerLast，而不要使用strFirstCustomer和strLastCustomer。
    量词列表：量词后缀说明
    First  一组变量中的第一个
    Last   一组变量中的最后一个
    Next   一组变量中的下一个变量
    Prev   一组变量中的上一个
    Cur    一组变量中的当前变量

    1.9常量（Constants）全部大写,采用下划线命名法.例如：MIN_WIDTH

    1.10资源布局文件（XML文件（layout布局文件））：全部小写，采用下划线命名法

        1)．contentview命名, Activity默认布局，以去掉后缀的Activity类进行命名。不加后缀：

        例如：activity_main.xml、activity_more.xml

        2)．Dialog命名：dialog_描述.xml

        例如：dialog_hint.xml

        3)．PopupWindow命名：ppw_描述.xml

        例如：ppw _info.xml

        4)．包含项：include_模块.xml

        例如：include_head.xml、include_bottom.xml

        5)．adapter的子布局：功能模块_item.xml

       例如：item_main.xml、



    1.11动画文件（anim文件夹下）：全部小写，采用下划线命名法，加前缀区分。
        //前面为动画的类型，后面为方向
            动画命名例子                    规范写法

               fade_in                      淡入

               fade_out                     淡出

               push_down_in                 从下方推入

               push_down_out                从下方推出

               push_left                    推像左方

               slide_in_from_top            从头部滑动进入

               zoom_enter                   变形进入

               slide_in                     滑动进入

               shrink_to_middle             中间缩小

    1.12资源ID（resourcesid）：
        1.strings的命名类型_{范围_}功能，范围可选。(以activity分开)
        以下为几种常用的命名：

        页面标题，命名格式为：title_页面
        按钮文字，命名格式为：btn_按钮事件
        标签文字，命名格式为：label_标签文字
        选项卡文字，命名格式为：tab_选项卡文字
        消息框文字，命名格式为：toast_消息
        编辑框的提示文字，命名格式为：hint_提示信息
        图片的描述文字，命名格式为：desc_图片文字
        对话框的文字，命名格式为：dialog_文字
        menu的item文字，命名格式为：action_文字

        2.colors的命名

        前缀{_控件}{_范围}{_后缀}，控件、范围、后缀可选，但控件和范围至少要有一个。

        背景颜色，添加bg前缀
        文本颜色，添加text前缀
        分割线颜色，添加div前缀
        区分状态时，默认状态的颜色，添加normal后缀
        区分状态时，按下时的颜色，添加pressed后缀
        区分状态时，选中时的颜色，添加selected后缀
        区分状态时，不可用时的颜色，添加disable后缀

        3.drawable的命名

        前缀{_控件}{_范围}{_后缀}，控件、范围、后缀可选，但控件和范围至少要有一个。

        图标类，添加ic前缀
        背景类，添加bg前缀
        分隔类，添加div前缀
        默认类，添加def前缀
        区分状态时，默认状态，添加normal后缀
        区分状态时，按下时的状态，添加pressed后缀
        区分状态时，选中时的状态，添加selected后缀
        区分状态时，不可用时的状态，添加disable后缀
        多种状态的，添加selector后缀（一般为ListView的selector或按钮的selector）

    1.13layout中的id命名

    命名模式为：view缩写_模块名称_view的逻辑名称    比如btn_login  loginBtn(在Activity中)

    view的缩写详情如下：

    控件                  缩写

    LayoutView              lv

    RelativeView            rv

    TextView                tv

    Button                  btn

    ImageButton             imgBtn

    ImageView               iv

    CheckBox                chk

    RadioButton             rdoBtn

    analogClock             anaClk

    DigtalClock             dgtClk

    DatePicker              dtPk

    EditText                edtTxt

    TimePicker              tmPk

    toggleButton            tglBtn

    ProgressBarp            roBar

    SeekBar                 skBar

    AutoCompleteText        ViewautoTxt

    ZoomControls            zmCtl

    VideoView               vdoVi

    WdbView                 webVi

    RantingBar              ratBar

    Tab                     tab

    Spinner                 spn

    Chronometer             cmt

    ScollView               sclVi

    TextSwitch              txtSwt

    ImageSwitch             imgSwt

    listView                lv

    ExpandableList          epdLt

    MapView                 mapVi

    1.14.activity中的view变量命名

        命名模式为：逻辑名称+view缩写   loginBtn


    1.15.styles.xml：将layout中不断重现的style提炼出通用的style通用组件，放到styles.xml中；

    1.16.使用layer-list和selector

    1.17总结:
        1.java代码中不出现中文，最多注释中可以出现中文

        2.局部变量命名、静态成员变量命名只能包含字母，单词首字母除第一个外，都为大写，其他字母都为小写

        3.常量命名只能包含字母和_，字母全部大写，单词之间用_隔开

        4.图片尽量分拆成多个可重用的图片

        5.服务端可以实现的，就不要放在客户端

        6.引用第三方库要慎重，避免应用大容量的第三方库，导致客户端包非常大

        7.处理应用全局异常和错误，将错误以邮件的形式发送给服务端

        8.图片的.9处理(IconWeb,ICONFONT)

        9.使用静态变量方式实现界面间共享要慎重

        10.Log(系统名称模块名称接口名称，详细描述)

        11.单元测试（逻辑测试、界面测试）

        12.不要重用父类的handler，对应一个类的handler也不应该让其子类用到，否则会导致message.what冲突

        13.activity中在一个View.OnClickListener中处理所有的逻辑

        14.strings.xml中使用%1$s实现字符串的通配

        15.如果多个Activity中包含共同的UI处理，那么可以提炼一个CommonActivity，把通用部分叫由它来处理，其他activity只要继承它即可

        16.使用button+activitgroup实现tab效果时，使用Button.setSelected(true)，确保按钮处于选择状态，并使activitygroup的当前activity与该button对应

        17.如果所开发的为通用组件，为避免冲突，将drawable/layout/menu/values目录下的文件名增加前缀

        18.数据一定要效验，例如字符型转数字型，如果转换失败一定要有缺省值；服务端响应数据是否有效判断

        19.大括号换行处理


2.单元测试(UI和功能测试):
    2.1UI测试:
    2.2功能测试:

3.使用到的设计模式:


4.软件最性终测试(稳定性,安全性,健壮等):